/*
 * This file is part of DiscordSRV, licensed under the GPLv3 License
 * Copyright (c) 2016-2025 Austin "Scarsz" Shapiro, Henri "Vankka" Schubin and DiscordSRV contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package com.discordsrv.common.util;

import com.discordsrv.common.AbstractDiscordSRV;
import com.discordsrv.common.config.connection.ConnectionConfig;
import com.discordsrv.common.config.documentation.DocumentationURLs;
import com.discordsrv.common.core.dependency.DependencyLoader;
import com.discordsrv.common.core.logging.impl.DiscordSRVLogger;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.StringJoiner;

public final class GitIgnoreUtil {

    private static final String GITIGNORE_FILE_NAME = ".gitignore";

    private GitIgnoreUtil() {}

    public static void createGitignore(Path dataDirectory) throws IOException {
        Path gitignore = dataDirectory.resolve(GITIGNORE_FILE_NAME);
        if (Files.exists(gitignore))  {
            return;
        }

        Path parent = gitignore.getParent();
        if (!Files.exists(parent)) {
            Files.createDirectories(parent);
        }

        StringJoiner content = new StringJoiner(System.lineSeparator());
        content.add("# This file is automatically generated by DiscordSRV");
        content.add("# If it is deleted, it will be re-created. But won't be updated, if edited");
        content.add("# If you need one of the below files to be checked in, just remove/comment the lines");
        content.add("");
        content.add("# The connections file contains secrets. " + DocumentationURLs.CONNECTIONS_YAML_SECURITY);
        content.add(ConnectionConfig.FILE_NAME);
        content.add("");
        content.add("# The below directory should not be needed in Git, when using Git correctly");
        content.add(AbstractDiscordSRV.OLD_CONFIG_BACKUP_DIRECTORY + "/");
        content.add("");
        content.add("# Log files, dependencies and databases, large files likely should be in your Git repository");
        content.add(DiscordSRVLogger.LOGS_DIRECTORY_NAME + "/");
        content.add(DependencyLoader.DEPENDENCY_DIRECTORY_NAME + "/");
        content.add("*.db");

        // "Empty last line" for Unix
        content.add("");

        Files.write(gitignore, content.toString().getBytes(StandardCharsets.UTF_8));
    }
}
